#########################################################################
## Check kinship between Narasimhan et al Steppe MLBA and Koken MLBA   ##
#########################################################################

cd /data2/projects1/Koken/analysis/

mkdir -p ./PMR_250508/; cd ./PMR_250508/

fn1=($(pwd)"/")
fn1="/data2/projects1/Koken/analysis/genotypes/Koken_MLBA.qpAdm.1240K.250305"
fn2="/data2/PubData/Narasimhan2019Science/analysis/genotypes/centralSouthAsia.EIGENSTRAT"
of1="Koken_MLBA_PMR_250508.txt"
tn1="temp1_"${of1}

## Groups not marked as outliers in Narasimhan et al 2019
tp1s="Aktogai_MLBA Kairan_MLBA Karagash_MLBA Kyzlbulak_MLBA1 Lisakovskiy_MLBA_Alakul Maitan_MLBA_Alakul"
tp1s+=" Oy_Dzhaylau_MLBA Priobrazhenka_MLBA Satan_MLBA_Alakul Solyanka_MLBA Srubnaya"
tp1s+=" Sintashta_MLBA Krasnoyarsk_MLBA"

## Groups marked as outliers in Narasimhan et al 2019
tp2s="Dali_MLBA Kairan_MLBA_o Krasnoyarsk_MLBA_o Kyzlbulak_MLBA2 Maitan_MLBA_Alakul_o"
tp2s+=" Oy_Dzhaylau_MLBA_o Priobrazhenka_LBA Sintashta_MLBA_o1 Sintashta_MLBA_o2 Sintashta_MLBA_o3"
tp2s+=" Srubnaya_o Zevakinskiy_LBA Zevakinskiy_MLBA"

echo ${tp1s} ${tp2s} | sed s/" "/"\n"/g | sort -k1,1 > ${tn1}_1  ## A list of populations to be extracted

## Check if individuals are included in the list
while read -r iid sex pid; do
    awk -v pid="$pid" '$1 == pid' ${tn1}_1 | wc -l >> ${tn1}_2
done < ${fn2}.ind

## Retrieve the column number of individuals to be extracted
cn1s=""
while read cn; do if [[ "$cn1s" == "" ]]; then cn1s+=${cn}; else cn1s+=","${cn}; fi; done < <(awk '{if ($1 == 1) print NR}' ${tn1}_2)

## Extract Steppe MLBA individuals from Narasimhan et al 2019
cut -c ${cn1s} ${fn2}.geno > ${tn1}_2.geno
paste ${fn2}.ind ${tn1}_2 | awk 'BEGIN {OFS="\t"} {if ($4 == 1) print $1,$2,$3}' > ${tn1}_2.ind

## Now, retrieve the column number of Koken MLBA individuals (n=19; including outliers)
cn2s=""
while read cn; do if [[ "$cn2s" == "" ]]; then cn2s+=${cn}; else cn2s+=","${cn}; fi; done < <(awk '{if ($3 ~ /^Koken_MLBA/) print NR}' ${fn1}.ind)

## Extract Koken MLBA individuals
cut -c ${cn2s} ${fn1}.geno > ${tn1}_3.geno
awk '$3 ~ /^Koken_MLBA/' ${fn1}.ind > ${tn1}_3.ind

## Now, keep only autosomal SNPs and reformat by adding spaces
rn1=($(awk '$2 <= 22' ${fn1}.snp | wc -l))
head -${rn1} ${tn1}_2.geno | sed 's/./& /g' > ${tn1}_2.geno.txt
head -${rn1} ${tn1}_3.geno | sed 's/./& /g' > ${tn1}_3.geno.txt

n1=($(wc -l ${tn1}_2.ind))   ## the number of Narasimhan et al individuals
n2=($(wc -l ${tn1}_3.ind))   ## the number of Koken MLBA individuals

echo 'PID1 IID1 PID2 IID2 nSNPs nmismatch pmismatch' | sed s/" "/"\t"/g > ${of1}
for i in $(seq 1 $n1); do
    pid1=($(head -${i} ${tn1}_2.ind | tail -1 | awk '{print $3}'))
    iid1=($(head -${i} ${tn1}_2.ind | tail -1 | awk '{print $1}'))
    cut -d ' ' -f ${i} ${tn1}_2.geno.txt > ${tn1}_4_1  ## Narasimhan genotype

    for j in $(seq 1 $n2); do
        pid2=($(head -${j} ${tn1}_3.ind | tail -1 | awk '{print $3}'))
        iid2=($(head -${j} ${tn1}_3.ind | tail -1 | awk '{print $1}'))
        cut -d ' ' -f ${j} ${tn1}_3.geno.txt | paste ${tn1}_4_1 - | awk '$1 != 9 && $2 != 9' > ${tn1}_4_2
        ntot=($(wc -l ${tn1}_4_2))
        nm=($(awk '$1 != $2' ${tn1}_4_2 | wc -l))
        pm=($(echo ${ntot}" "${nm} | awk '{printf("%.5f\n", $2/$1)}'))
        echo -e ${pid1}"\t"${iid1}"\t"${pid2}"\t"${iid2}"\t"${ntot}"\t"${nm}"\t"${pm} >> ${of1}
    done

    rm ${tn1}_4_1 ${tn1}_4_2
    echo ${pid1}" "${iid1}" is processed"
done

cp ${tn1}_2.geno Narasimhan2019Science.steppeMLBA.1240K.geno
cp ${tn1}_2.ind Narasimhan2019Science.steppeMLBA.1240K.ind
cp ${tn1}_3.geno Koken_MLBA.1240K.geno
cp ${tn1}_3.ind Koken_MLBA.1240K.ind

## Remove temporary files
rm ${tn1}_*


##########################################################
## 2. Re-calculate PMR between MLBA Koken individuals   ##
##    after ordering individuals by Pandora ID          ##
##########################################################

cd /data2/projects1/Koken/analysis/PMR_250508/

pt1=($(pwd)"/")
fn1="Koken_MLBA.1240K"
snpf="/data2/PubData/Human_1240K_genotypes/1240K.241123.snp"
of1=${fn1}".pairwise.mismatch.txt"
tn1="temp1_"${of1}

## Produce order number
awk '{print $1,$2,$3,NR}' ${fn1}.ind | sort -k1,1 | awk 'BEGIN {OFS="\t"} {if (NR < 10) print $1,$2,$3,$4,"0"NR;
    else print $1,$2,$3,$4,NR}' > ${tn1}_1

## Slice out each individual and give the order number
while read -r iid sex pid n1 n2; do
    cut -c ${n1} ${fn1}.geno > ${tn1}_2_${n2}
    echo ${iid}" is processed"
done < ${tn1}_1

## Count the autosomal SNPs
rn1=($(awk '$2 <= 22' ${snpf} | wc -l))

## Merge genotype data by order
## paste ${tn1}_2_* -d '' > ${tn1}_2.geno
paste ${tn1}_2_* -d ' ' | head -${rn1} > ${tn1}_3.geno
cut -f 1-3 ${tn1}_1 > ${tn1}_3.ind

nind=($(wc -l ${tn1}_3.ind))
let n1=${nind}-1

echo 'ID1 ID2 nSNPs nmismatch pmismatch' | sed s/" "/"\t"/g > ${of1}
for i in $(seq 1 $n1); do
    iid1=($(head -${i} ${tn1}_3.ind | tail -1 | awk '{print $1}'))
    let n2=${i}+1
    for j in $(seq $n2 $nind); do
        iid2=($(head -${j} ${tn1}_3.ind | tail -1 | awk '{print $1}'))
        cut -d ' ' -f ${i},${j} ${tn1}_3.geno | awk '$1 != 9 && $2 != 9' > ${tn1}_3
        ntot=($(wc -l ${tn1}_3))
        nm=($(awk '$1 != $2' ${tn1}_3 | wc -l))
        pm=($(echo ${ntot}" "${nm} | awk '{printf("%.5f\n", $2/$1)}'))
        echo -e ${iid1}"\t"${iid2}"\t"${ntot}"\t"${nm}"\t"${pm} >> ${of1}
    done
    echo ${iid1}" is processed"
done

rm ${tn1}_*

